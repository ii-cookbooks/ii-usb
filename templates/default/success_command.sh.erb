#!/bin/sh
TMPVT=10
exec > >(tee /target/root/success_command.log | logger -t success-command -s 2>/dev/tty$TMPVT ) 2>&1
set +e -x
chvt $TMPVT

export DISPLAY=:0.0
#gnome-terminal -t late-chef -e 'tail -F /target/root/success_command.log'

mount -o bind /isodevice /target/mnt
cp -av /*log /target/root
chroot /target dpkg -i /mnt/cache/<%=node['chef_client']['package']['filename']%>


# these three steps should be put into ii-ubiquity::success
# /home is btrfs and should be the rest of the disk
btrfs subvolume create /target/home/ii
cp -av /isodevice/chef-repo /target/home/ii/chef-repo
btrfs subvolume create /target/home/ii/chef-repo/.chef/cache
cp -av /isodevice/cache /target/home/ii/chef-repo/.chef
cp -a /isodevice/firstboot.sh /target/root
sed -i 's_exit 0_bash /root/firstboot.sh_' /target/etc/rc.local; 

mount -t proc none /target/proc
chroot /target hostname localhost

chroot /target chef-solo -c /mnt/ubiquity-success-solo.rb #2>&1 | tee /dev/tty10 | tee /target/root/chef-solo-success.log

sleep <%=node['ii-usb']['chvt']['sleep']%>
chvt 7

# /root is your installers fs
# /root/cdrom is the mounted version of the iso file
# /root/isodevice is the usb we booted from
# /target now exists!
# to run this you need 
# d-i ubiquity/success_command string bash /isodevice/success_command.sh
# it is picked up by ubiquity when successful

# chroot /target hostname laptop.training # because ohai fails if 'hostname -f' doesn't have fqdn
# running chef-client in chroot is a pain https://bugs.launchpad.net/ubuntu/+source/upstart/+bug/430224
# dpkg-divert --local --rename --add /sbin/initctl
# ln -s /bin/true /sbin/initctl
# allows thing to sorta work, but we do can get into a mess if we actually want services to start


# chroot /target hostname laptop.training # because ohai fails if 'hostname -f' doesn't have fqdn
# running chef-client in chroot is a pain https://bugs.launchpad.net/ubuntu/+source/upstart/+bug/430224
# dpkg-divert --local --rename --add /sbin/initctl
# ln -s /bin/true /sbin/initctl
# allows thing to sorta work, but we do can get into a mess if we actually want services to start

# sleep helps me debug 
# sleep 9999

